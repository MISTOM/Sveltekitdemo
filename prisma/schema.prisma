generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id            Int        @id @default(autoincrement())
  name          String     @db.VarChar(255)
  email         String     @unique @db.VarChar(255)
  password      String     @db.VarChar(255)
  phoneNumber   String?    @unique @db.VarChar(255)
  accountNumber Int?    @unique 
  bankName      String?     @db.VarChar(255)
  branchName    String?     @db.VarChar(255)
  roleId        Int
  role          roles      @relation(fields: [roleId], references: [id])
  isApproved    Boolean    @default(false)
  products      Product[]
  orders        Orders[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?  @db.Text
  price       Int
  images      String  @db.Text
  sellerId    Int
  seller      User  @relation(fields: [sellerId], references: [id])
  isApproved  Boolean @default(false)
  orders      ProductOnOrder[]
}

// there is no buyer account hence the buyerid is not needed
model Orders {
  id         Int      @id @default(autoincrement())
  sellerId   Int
  buyerName  String   @db.VarChar(255)
  buyerEmail String   @db.VarChar(255)
  buyerPhone String   @db.VarChar(255)
  totalPrice Int
  isDelivered Boolean @default(false)
  user     User   @relation(fields: [sellerId], references: [id])
  products ProductOnOrder[]

}

model ProductOnOrder{
  orderId Int
  productId Int
  quantity Int
  order Orders @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}

model roles {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  user User[]
}
